package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ThuetnAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThuetnAllPropertiesEquals(Thuetn expected, Thuetn actual) {
        assertThuetnAutoGeneratedPropertiesEquals(expected, actual);
        assertThuetnAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThuetnAllUpdatablePropertiesEquals(Thuetn expected, Thuetn actual) {
        assertThuetnUpdatableFieldsEquals(expected, actual);
        assertThuetnUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThuetnAutoGeneratedPropertiesEquals(Thuetn expected, Thuetn actual) {
        assertThat(expected)
            .as("Verify Thuetn auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThuetnUpdatableFieldsEquals(Thuetn expected, Thuetn actual) {
        assertThat(expected)
            .as("Verify Thuetn relevant properties")
            .satisfies(e -> assertThat(e.getBacthue()).as("check bacthue").isEqualTo(actual.getBacthue()))
            .satisfies(e -> assertThat(e.getTu()).as("check tu").isEqualTo(actual.getTu()))
            .satisfies(e -> assertThat(e.getDen()).as("check den").isEqualTo(actual.getDen()))
            .satisfies(e -> assertThat(e.getThuesuat()).as("check thuesuat").isEqualTo(actual.getThuesuat()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThuetnUpdatableRelationshipsEquals(Thuetn expected, Thuetn actual) {}
}
