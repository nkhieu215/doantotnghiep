package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BangchamcongAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBangchamcongAllPropertiesEquals(Bangchamcong expected, Bangchamcong actual) {
        assertBangchamcongAutoGeneratedPropertiesEquals(expected, actual);
        assertBangchamcongAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBangchamcongAllUpdatablePropertiesEquals(Bangchamcong expected, Bangchamcong actual) {
        assertBangchamcongUpdatableFieldsEquals(expected, actual);
        assertBangchamcongUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBangchamcongAutoGeneratedPropertiesEquals(Bangchamcong expected, Bangchamcong actual) {
        assertThat(expected)
            .as("Verify Bangchamcong auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBangchamcongUpdatableFieldsEquals(Bangchamcong expected, Bangchamcong actual) {
        assertThat(expected)
            .as("Verify Bangchamcong relevant properties")
            .satisfies(e -> assertThat(e.getNcdilam()).as("check ncdilam").isEqualTo(actual.getNcdilam()))
            .satisfies(e -> assertThat(e.getThangcc()).as("check thangcc").isEqualTo(actual.getThangcc()))
            .satisfies(e -> assertThat(e.getNclephep()).as("check nclephep").isEqualTo(actual.getNclephep()))
            .satisfies(e -> assertThat(e.getXeploai()).as("check xeploai").isEqualTo(actual.getXeploai()))
            .satisfies(e -> assertThat(e.getNgayththuong()).as("check ngayththuong").isEqualTo(actual.getNgayththuong()))
            .satisfies(e -> assertThat(e.getNgaythle()).as("check ngaythle").isEqualTo(actual.getNgaythle()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBangchamcongUpdatableRelationshipsEquals(Bangchamcong expected, Bangchamcong actual) {
        assertThat(expected)
            .as("Verify Bangchamcong relationships")
            .satisfies(e -> assertThat(e.getNhanvien()).as("check nhanvien").isEqualTo(actual.getNhanvien()));
    }
}
